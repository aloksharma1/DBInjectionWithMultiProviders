// <auto-generated />
using System;
using DBInjectionWithMultiProviders.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBInjectionWithMultiProviders.Persistence.Migrations.SQLiteMigrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20210303163557_InitialSQLite")]
    partial class InitialSQLite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("DBInjectionWithMultiProviders.Domain.Entities.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<long>("DateCreated")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DateModified")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Landmark")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street2")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("DBInjectionWithMultiProviders.Domain.Entities.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DateCreated")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DateModified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<int>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("DBInjectionWithMultiProviders.Domain.Entities.UserAddress", b =>
                {
                    b.HasOne("DBInjectionWithMultiProviders.Domain.Entities.UserInfo", "UserInfo")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
